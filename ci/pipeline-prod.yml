resource_types:

- name: artifactory
  type: docker-image
  source:
    repository: pivotalservices/artifactory-resource
    tag: latest

resources:

- name: GoFNOL-image
  type: docker-image
  source:
    username: ((internal-docker-user))
    password: ((internal-docker-pass))
    tag: latest
    repository: ((internal-docker-addr))/gofnol-default-image

- name: GoFNOL-artifactory
  type: artifactory
  source:
    endpoint: ((artifactory-base-url))
    username: ((artifactory-username))
    password: ((artifactory-password))
    skip_ssl_verification: true
    repository: /gotime-driver-release-local/com/solera/audatex/gotime-driver/GoFNOL
    regex: "GoFNOL-(?<version>.*).zip"

- name: GoFNOL-cf-demo
  type: cf
  source: &GoFNOL-cf-demo-source
    api: ((cf-prd-api))
    username: ((cf-prd-username))
    password: ((cf-prd-password))
    organization: automated-appraisal-engine
    space: demo
    skip_cert_check: false

jobs:

- name: deploy-GoFNOL-demo-blue
  plan:
  - get: GoFNOL-image
  - get: GoFNOL-artifactory
    trigger: true
  - task: prepare-manifest
    image: GoFNOL-image
    config:
      platform: linux
      inputs:
      - name: GoFNOL-artifactory
      outputs:
      - name: deployables
      run:
        path: bash
        args:
        - -exc
        - |
          zip_file=GoFNOL-*.zip
          unzip ./GoFNOL-artifactory/${zip_file} -d ./deployables
          sed -i -e "s/\[HOST_NAME\]/gofnol-demo-blue/" ./deployables/manifest.yml
  - put: GoFNOL-cf-demo
    params:
      manifest: deployables/manifest.yml
      path: deployables/app

- name: test-GoFNOL-demo
  plan:
  - get: GoFNOL-image
    passed:
    - deploy-GoFNOL-demo-blue
  - get: GoFNOL-cf-demo
    passed:
    - deploy-GoFNOL-demo-blue
    trigger: true
  - task: do-the-magic
    image: GoFNOL-image
    params:
      <<: *GoFNOL-cf-demo-source
    config:
      platform: linux
      run:
        path: bash
        args:
        - -ec
        - |
          app_name=GoFNOL-blue
          cf login -a ${api} -u ${username} -p ${password} -o "${organization}" -s "${space}"
          set -x
          app_url=$(cf app $app_name | grep routes | sed -e 's/routes:\s*/https:\/\//')

          #visit home page
          response=$(curl -I $app_url)

          #verify auth redirect occurred
          response_status=$(echo "$response" | grep HTTP/1.1 | tr -d '\r\n')
          if [ "$response_status" != "HTTP/1.1 302 Found" ]
          then
            echo "App did not respond with redirect as expected"
            exit 1
          fi

          #get IS endpoint from cf
          cf_env_vars=$(cf env $app_name)
          set +x
          vcap_start=$(echo "$cf_env_vars" | grep -m 1 -n '^{' | cut -f1 -d:)
          vcap_end=$(echo "$cf_env_vars" | grep -m 1 -n '^}' | cut -f1 -d:)
          vcap=$(echo "$cf_env_vars" | tail -n+${vcap_start} | head -n$(($vcap_end - $vcap_start + 1)))
          expected_redirect_url=$(echo "$vcap" | jq -r '.["VCAP_SERVICES"]["user-provided"] | .[] | select(.["name"] | startswith("IS")) | .["credentials"]["endpoint"]')
          set -x

          #verify auth redirect location
          location_path=$(echo "$response" | grep Location: | sed -e 's/Location: //' | sed -e 's/\?.*//')
          if [ "$location_path" != "${expected_redirect_url}/connect/authorize" ]
          then
            echo "App did not respond with correct redirect as expected"
            exit 1
          fi

- name: greenify-GoFNOL-demo
  plan:
  - get: GoFNOL-image
    passed:
    - test-GoFNOL-demo
  - get: GoFNOL-cf-demo
    passed:
    - test-GoFNOL-demo
    trigger: true
  - task: transition-blue-to-green
    image: GoFNOL-image
    params:
      <<: *GoFNOL-cf-demo-source
    config:
      platform: linux
      run:
        path: bash
        args:
        - -exc
        - |
          cf login -a ${api} -u ${username} -p ${password} -o "${organization}" -s "${space}"
          cf map-route GoFNOL-blue apps-prod.gp2.axadmin.net --hostname gofnol-demo
          cf delete GoFNOL -f || true
          cf unmap-route GoFNOL-blue apps-prod.gp2.axadmin.net --hostname gofnol-demo-blue
          cf rename GoFNOL-blue GoFNOL