@{
	ViewData["Title"] = "Create Claim";
}

<h2>Create Claim</h2>
<form method="post" action="fnol" onsubmit="submitForm()">
	<div class="input-container">
		<label for="mobile-flow-ind">Mobile Flow Indicator</label>
		<select name="mobile-flow-ind" id="mobile-flow-ind" pattern="[DYN]" required="required" class="untouched" onchange="removeUntouched(event)">
			<option value="D">Digital Garage Claims (D)</option>
			<option value="Y">Pocket Estimate (Y)</option>
			<option value="N">Not Mobile (N)</option>
		</select>

		<label for="claim-number">New Claim Number</label>
		<input type="text" name="claim-number" id="claim-number" placeholder="Claim Number" required="required" class="untouched" onchange="removeUntouched(event)"/>

		<label for="first-name">First Name</label>
		<input type="text" name="first-name" id="first-name" placeholder="First Name" required="required" class="untouched" onchange="removeUntouched(event)"/>

		<label for="last-name">Last Name</label>
		<input type="text" name="last-name" id="last-name" placeholder="Last Name" required="required" class="untouched" onchange="removeUntouched(event)"/>

		<label for="phone-number">Phone number</label>
		<input type="tel" name="phone-number" id="phone-number" placeholder="Phone Number" required="required" pattern=".{7,}" class="untouched" onchange="removeUntouched(event)"/>

		<label for="zip-code">Postal Code</label>
		<input type="number" name="zip-code" id="zip-code" placeholder="Zip Code (first 5)" required="required" min="11111" max="99999" class="untouched" onchange="removeUntouched(event)"/>
		<input type="number" name="zip-addon" id="zip-addon" placeholder="Extra Zip (extra 4)" minlength="4" min="1111" max="9999" class="untouched" onchange="removeUntouched(event)"/>

		<label for="state">State</label>
		<input type="text" name="state" id="state" placeholder="State" required="required" pattern="getStatePattern()" class="untouched" onchange="removeUntouched(event)"/>

		<label for="email">Email</label>
		<input type="email" name="email" id="email" placeholder="Email" required="required" class="untouched" onchange="removeUntouched(event)"/>

		<label for="vin">VIN</label>
		<input type="text" name="vin" id="vin" placeholder="VIN" required="required" class="untouched" onchange="removeUntouched(event)"/>

		<label for="loss-type">Loss Type</label>
		<input type="text" name="loss-type" id="loss-type" value="COLL" placeholder="Loss Type" required="required" class="untouched" onchange="removeUntouched(event)"/>

		<label for="deductible">Deductible</label>
		<input type="text" name="deductible" id="deductible" placeholder="Deductible" class="untouched" onchange="removeUntouched(event)"/>
	</div>
	<div id="progress-indicator">&nbsp;</div>
	<input class="button primary shadowed" type="submit" value="Create"/>
</form>
@if (TempData["result"] != null)
{
	<p>@TempData["result"]</p>
	<p>@TempData["claim"]</p>
	<p>@TempData["responseTime"]</p>
}
<script>
	const disableForm = () => document.forms[0].children[0].setAttribute('disabled', 'disabled')
	const getStateAbbreviations = () => ["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","MD","MA","MI","MN","MS","MO","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"]
	const getStateNames = () => ["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]
	const getStatePattern = () => new RegExp(getStateNames().concat(getStateAbbreviations()).join('|'))
	const removeUntouched = (e) => {
		if (String(e.currentTarget.value).length > 0) {
			e.currentTarget.className = e.currentTarget.className.replace(/\buntouched\b/g, '')
		}
	}
	const showProgress = () => {
		disableForm()
		const indicator = document.getElementById('progress-indicator')
		const count = 1
		const PROGRESS_UPDATE_INTERVAL = 1000
		const updateProgressIndicator = () => {
			indicator.textContent = `${count} second(s) elapsed (average response 15 to 20 seconds)`
			count++
		}
		updateProgressIndicator()
		setInterval(updateProgressIndicator, PROGRESS_UPDATE_INTERVAL)
	}
	// NOTE: returns boolean `true` intentionally
	const submitForm = () => setTimeout(showProgress, 0) && true

	// NOTE: apply better state validation pattern if JS available
	window.onload = () => document.getElementById('state').setAttribute('pattern', getStatePattern())
</script>
